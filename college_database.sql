CREATE DATABASE college_library;
USE college_library;

CREATE TABLE LIBRARIAN 
	(LIBRARIAN_ID INT NOT NULL, 
	HOURS FLOAT, 
	DATE_OF_JOINING DATE,
	CONSTRAINT LIBRARIAN_PK PRIMARY KEY (LIBRARIAN_ID) 
); 

CREATE TABLE RESOURCES 
	(BARCODE INT NOT NULL, 
	TITLE VARCHAR (255) NOT NULL, 
	COPIES INT NOT NULL, 
	LOAN_LENGTH INT NOT NULL,
	CONSTRAINT RESOURCE_PK PRIMARY KEY (BARCODE)
); 

CREATE TABLE AUTHOR 
	(BARCODE INT NOT NULL, 
	AUTHOR_NAME VARCHAR (255), 
	CONSTRAINT AUTHOR_FK 
	  FOREIGN KEY (BARCODE) 
	  REFERENCES RESOURCES(BARCODE) 
); 

CREATE TABLE PUBLISHER 
	(BARCODE INT NOT NULL, 
	RESOURCE_TYPE VARCHAR (255) NOT NULL, 
	PUBLISHER VARCHAR (255), 
	PUBLICATION_DATE INT, 
	EDITION INT, 
	CONSTRAINT PUBLISHER_FK
	  FOREIGN KEY (BARCODE) 
	  REFERENCES RESOURCES(BARCODE) 
); 

CREATE TABLE SUBJECT 
	(BARCODE INT NOT NULL,
	CLASS_NO INT NOT NULL, 
	SUBJECT_NAME VARCHAR(255), 
	FLOOR_NO INT NOT NULL, 
	SHELF_NO INT NOT NULL,
	CONSTRAINT SUB_FK
	  FOREIGN KEY (BARCODE)
	  REFERENCES RESOURCES(BARCODE)
);

CREATE TABLE BORROWER  
	(BORROWER_ID int, 
	F_NAME VARCHAR (150), 
	L_NAME VARCHAR (200), 
	EMAIL VARCHAR (200), 
	PAID_STATUS CHAR(1), -- THE INPUT WIIL BE EITHER Y OR N --
	ACTIVE_STATUS CHAR(1),
	TYPE VARCHAR (7),
	CONSTRAINT BORROWER_PK PRIMARY KEY (BORROWER_ID)
); 

DROP TABLE BORROWER;

CREATE TABLE LOAN 
	(LOAN_ID INT NOT NULL, 
	ISSUE_DATE DATE NOT NULL,  
	RETURN_DATE DATE, 
	BARCODE INT NOT NULL, 
	BORROWER_ID INT NOT NULL, 
	CONSTRAINT L_PK PRIMARY KEY (LOAN_ID),
	CONSTRAINT BARC_FK  
	  FOREIGN KEY (BARCODE) 
	  REFERENCES RESOURCES(BARCODE), 
	CONSTRAINT BORR_FK
	  FOREIGN KEY (BORROWER_ID) 
	  REFERENCES BORROWER(BORROWER_ID)
	  -- ON DELETE CASCADE -- 
	-- CONSTRAINT CHECK_ISSUE_DATE CHECK (ISSUE_DATE < DATE_OF_RETURN) 
);
  
CREATE TABLE loan_sequence (
   id INT NOT NULL AUTO_INCREMENT,
   value INT NOT NULL,
   PRIMARY KEY (id)
);


CREATE TABLE LOAN_DUE 
	(LOAN_ID INT, 
	BARCODE INT,
	DUE_DATE DATE,
	CONSTRAINT L_FK
	  FOREIGN KEY (LOAN_ID) 
	  REFERENCES LOAN(LOAN_ID), 
	CONSTRAINT BC_FK
	  FOREIGN KEY (BARCODE) 
	  REFERENCES RESOURCES(BARCODE) 
);  


